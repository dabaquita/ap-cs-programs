/**
 * Planning / Pseudocode
 *
 * import Scanner
 * import IOException
 * import File
 * import PrintWriter
 *
 * --- Main (throws IOException) ---
 *
 * --> Variables
 * Scanner input
 * PrintWriter outFile --> new PrintWriter(new File("passwords.txt"))
 * File fileName = new File("passwords.txt)
 * Scanner inFile
 *
 * String userInput
 * int userSelection
 * int passwordLength
 *
 * int randomNum
 * char oneCharInPassCode
 * String wholePassCode
 *
 * boolean continuePrompt = true
 * int numOfCodes = 0;
 *
 *
 * --> Processing 1 (Display menu and gather selection)
 * Display menu:
 *
 *      [1] Lowercase Letters (ASCII: [97, 122])
 *      [2] Numbers and Lowercase Letters (ASCII: [48, 57] U [97, 122])
 *      [3] Numbers and Uppercase Letters (ASCII: [48, 57] U [65, 90])
 *      [4] Lowercase and Uppercase Letters (ASCII: [97, 122] U [65, 90])
 *      [5] Quit
 *
 * Prompt for selection (1 - 5) and assign to userInput
 * Parse int value from userInput and into userSelection
 *
 * if userSelection is not within the range of 1-5 inclusive
 *      print "Invalid option. Please try again."
 *
 *
 * --> Processing 2 (Password length)
 * Prompt for password length( 6 or more) and assign to userInput
 * Parse int value from userInput and into passwordLength
 *
 * if passwordLength is less than 6
 *      print "Password length too short Please try again."
 *
 *
 * --> Processing 3 (Generate random password and place into file)
 *
 *      if userSelection is 1
 *          for (passwordLength; passwordLength > 0; passwordLength--)
 *              generate randomNum within [97, 122]
 *              Cast randomNum into oneCharInPassCode
 *              wholePassCode += oneCharInPassCode
 *
 *          write wholePassCode into one line in passwords.txt
 *
 *      else if userSelection is 2
 *          for
 *              generate randomNum either 0 or 1 to decide between first set or second set of characters
 *
 *              if randomNum is 0
 *                  generate randomNum within [48, 57]
 *              if randomNum is 1
 *                  generate randomNum within [97, 122]
 *
 *              Cast randomNum into oneCharInPassCode
 *              wholePassCode += oneCharInPassCode
 *
 *          write wholePassCode into one line in passwords.txt
 *
 *      else if userSelection is 3
 *          for
 *              generate randomNum either 0 or 1 to decide between first set or second set of characters
 *
 *              if randomNum is 0
 *                  generate randomNUm within [48, 57]
 *              if randomNum is 1
 *                  generate randomNUm within [65, 90]
 *
 *              Cast randomNum into oneCharInPassCode
 *              wholePassCode += oneCharInPassCode
 *
 *          write wholePassCode into one line in passwords.txt
 *
 *      else if userSelection is 4
 *          for
 *              generate randomNum either 0 or 1 to decide between first set or second set of characters
 *
 *              if randomNum is 0
 *                  generate randomNum within [97, 122]
 *              if randomNum is 1
 *                  generate randomNum within [65, 90]
 *
 *              Cast randomNum into oneCharInPassCode
 *              wholePassCode += oneCharInPassCode
 *
 *          write wholePassCode into one line in passwords.txt
 *
 *      else if userSelection is 5
 *          continueLoop = false
 *          print "Thank you for using the Pass Code Generator"
 *
 *
 * --> Processing FINAL
 *
 * Display menu
 *
 * while continuePrompt is true
 *
 *      Processing 1
 *
 *      Processing 2
 *
 *      Processing 3
 *
 *
 * --> Final output
 * Print "Here are your randomly generated codes"
 *
 * while inFile still has data to be read
 *
 *      print numOfCodes++ + "  " + inFile.nextLine()
 *
 */